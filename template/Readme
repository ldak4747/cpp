这里主要对template的各种重要细节和不易理解容易出错的地方进行总结, 旨在理解和熟练的掌握运用template:

1、function:
    如何在模板函数中, 实现对返回值的泛型, 答案是调用方对返回值类型做显式实例化
    这样的使用可能不是特别常见, 但应该掌握, 而更应该掌握的是, 通过这例子, 提高对template的理解和运用

2、how_to_define_template_member_function_not_inline:
    长期以来对于模板类的模板函数, 它的声明和定义必须在一起, 也就是必须是一个内联成员函数;
    那么真的必须是这样吗?
    答案是否定的! 答案是: 连续两个template.....
    通过这个东西, 有没有再加强一点, 对template的理解和运用?

3、可以指定默认的模板泛型类型
    只要必须是编译期间可推断的类型, 就可以

4、指定右值整型常量为模板泛型参数
    这招相当于在编译期间给类定义默认成员值, 在c++11可以声明时初始化的情况下, 这招优势不再明显
